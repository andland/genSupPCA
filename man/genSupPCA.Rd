% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gen_sup_pca.R
\name{genSupPCA}
\alias{genSupPCA}
\title{Supervised dimensionality reduction for exponential family data}
\usage{
genSupPCA(x, y, k = 2, alpha = NULL, m = 4, family_x = c("gaussian",
  "binomial", "poisson", "multinomial"), family_y = c("gaussian", "binomial",
  "poisson"), quiet = TRUE, max_iters = 100, max_iters_per = 25,
  conv_criteria = 1e-05, discrete_deriv = FALSE, random_start = FALSE,
  start_U, mu, start_beta)
}
\arguments{
\item{x}{covariate matrix}

\item{y}{response vector}

\item{k}{dimension}

\item{alpha}{balance between dimensionality reduction of \code{x} and prediction of \code{y}}

\item{m}{value to approximate the saturated model in dimensionality reduction}

\item{family_x}{exponential family distribution of covariates}

\item{family_y}{exponential family distribution of response}

\item{quiet}{logical; whether the calculation should give feedback}

\item{max_iters}{maximum number of iterations}

\item{max_iters_per}{maximum iterations within each iteration}

\item{conv_criteria}{convergence criteria}

\item{discrete_deriv}{whether to calculate discrete derivatives w.r.t \code{U}
instead of the closed form derivative with \code{beta} held constant}

\item{random_start}{whether to randomly initialize \code{U}}

\item{start_U}{initial value for \code{U}}

\item{mu}{specific value for \code{mu}, the mean vector of \code{x}}

\item{start_beta}{initial value for \code{beta}}
}
\value{
An S3 object of class \code{gspca} which is a list with the
following components:
\item{mu}{the main effects for dimensionality reduction}
\item{U}{the \code{k}-dimentional orthonormal matrix with the loadings}
\item{beta}{the \code{k + 1} length vector of the coefficients}
\item{PCs}{the princial component scores}
\item{m}{the parameter inputed}
\item{family_x}{the exponential family of covariates}
\item{family_y}{the exponential family of response}
\item{iters}{number of iterations required for convergence}
\item{loss_trace}{the trace of the average negative log likelihood of the algorithm.
   Should be non-increasing}
}
\description{
Supervised dimensionality reduction for exponential family data
}
\examples{
rows = 100
cols = 10
set.seed(1)
mat_np = outer(rnorm(rows), rnorm(cols))

# generate a count matrix and binary response
mat = matrix(rpois(rows * cols, c(exp(mat_np))), rows, cols)
response = rbinom(rows, 1, rowSums(mat) / max(rowSums(mat)))

mod = genSupPCA(mat, response, k = 1, alpha = 0, family_x = "poisson", family_y = "binomial",
                quiet = FALSE, max_iters_per = 1, discrete_deriv = FALSE)

plot(inv.logit.mat(cbind(1, mod$PCs) \%*\% mod$beta), response)
plot(rowSums(mat), response)
\dontrun{
ggplot(data.frame(PC = mod$PCs[, 1], y = response), aes(PC, y)) + stat_summary_bin(bins = 10)
}
}

